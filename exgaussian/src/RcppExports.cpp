// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// d_exgaussian
// Define the ex-Gaussian density function double d_exgaussian(double x, double mu, double sigma, double tau);
RcppExport SEXP _exgaussian_d_exgaussian(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exgaussian(x, mu, sigma, tau));
    return rcpp_result_gen;
END_RCPP
}
// exgaussian_cpp
NumericVector exgaussian_cpp(double x, double mu, double sigma, double tau);
RcppExport SEXP _exgaussian_exgaussian_cpp(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(exgaussian_cpp(x, mu, sigma, tau));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP exgaussian_cpp(SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_exgaussian_d_exgaussian", (DL_FUNC) &_exgaussian_d_exgaussian, 4},
    {"_exgaussian_exgaussian_cpp", (DL_FUNC) &_exgaussian_exgaussian_cpp, 4},
    {"exgaussian_cpp", (DL_FUNC) &exgaussian_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_exgaussian(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
